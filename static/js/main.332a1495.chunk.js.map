{"version":3,"sources":["services/getRandomName.ts","components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","Clock","state","today","toUTCString","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAAO,SAASA,IACd,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,G,WCCLK,EAAb,4MACEC,MAAQ,CACNC,OAAO,IAAIN,MAAOO,cAAcJ,OAAO,IAAK,IAFhD,EAKEK,QAAyB,KAL3B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,OAAO,IAAIN,MAAOO,cAAcJ,OAAO,IAAK,KAG5DU,QAAQC,KAAK,EAAKT,MAAMC,SACvB,OAbP,gCAgBE,SAAmBS,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAnBzE,kCAuBE,WACuB,OAAjBP,KAAKD,SACPE,OAAOS,cAAcV,KAAKD,WAzBhC,oBA6BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKJ,MAAMC,eAvCtB,GAA2Be,IAAMC,WCGpBC,EAAb,4MACElB,MAAQ,CACNmB,UAAU,EACVR,UAAW,WAHf,uDAME,WAA2B,IAAD,OACxBS,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKhB,SAAS,CAAEY,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKd,SAAS,CAAEY,UAAU,OAG5Bd,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEI,UAAWlB,QAC1B,QAnBP,oBAsBE,WACE,OACE,sBAAKsB,UAAU,MAAf,UACE,6CAECX,KAAKJ,MAAMmB,UAAY,cAAC,EAAD,CAAOR,UAAWP,KAAKJ,MAAMW,mBA3B7D,GAAyBK,IAAMC,WCJ/BO,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.332a1495.chunk.js","sourcesContent":["export function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n","import React from 'react';\nimport { ClockState } from '../../types/ClockState';\nimport { ClockProps } from '../../types/ClockProps';\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state = {\n    today: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date().toUTCString().slice(-12, -4) });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId !== null) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { getRandomName } from './services/getRandomName';\nimport { Clock } from './components/Clock/Clock';\nimport { AppState } from './types/AppState';\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}